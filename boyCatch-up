#include <iostream>
#include <conio.h>
#include <cstdio>
#include <time.h>
#include <stdlib.h>
#include <Windows.h>
#include <thread>

using namespace std;

// Рандом 
int Random(int min, int max) {
	int num = min + rand() % (max - min + 1);
	return num;
}

// Скрыть курсор
void hidecursor()
{
	HANDLE consoleHandle = GetStdHandle(STD_OUTPUT_HANDLE);
	CONSOLE_CURSOR_INFO info;
	info.dwSize = 100;
	info.bVisible = FALSE;
	SetConsoleCursorInfo(consoleHandle, &info);
}

int main() {
	int x, y, x1, y1, x2, y2, x3 = 0, y3 = 0, color, buf1, buf2, kol = 0, type, size, score = 0, score2 = 0, toch = 0, toch2 = 0, x_sec = 0, y_sec = 0, x_sec_ch, y_sec_ch, exit = 0;
	int comp_x, comp_y, place, live1 = 1, live2 = 1;
	hidecursor();
	string const GREEN = "\x1B[92m";
	string const BLUE = "\x1B[94m";
	string const WHITE = "\x1B[97m";
	string const YELLOW = "\x1B[93m";
	string const MAGENT = "\x1B[95m";
	string const CYAN = "\x1B[91m";
	string const GRAY = "\x1B[90m";

	HANDLE hd = GetStdHandle(STD_OUTPUT_HANDLE);
	COORD cd;
	cd.X = 0;
	cd.Y = 0;

	setlocale(0, "");

	// Ввод X и Y карты
	cout << "enter x for map: ";
	cin >> x;
	cout << "enter y for map: ";
	cin >> y;

	x = abs(x);
	y = abs(y);

	// Создание двумерного динамического массива 
	string** arr = new string * [y + 2];
	for (int i = 0; i < y + 2; i++)
	{
		arr[i] = new string[x + 2];
	}

	// Запись в массив координатной плоскости
	for (int i = 0; i < y + 2; i++) {
		if (i == 0 or i == y + 1) {
			for (int j = 0; j < x + 2; j++) {
				arr[i][j] = "# ";
			}
		}
		else {
			for (int j = 0; j < x + 2; j++) {
				if (j == 0 or j == x + 1) {
					arr[i][j] = "# ";
				}
				else {
					arr[i][j] = "  ";
				}
			}
		}
	}

	// Спавн препядствий 
	for (int i = 1; i < y + 1; i++) {
		for (int j = 1; j < x + 1; j++) {
			type = Random(1, 10);
			if (type == 2 or type == 1) {
				arr[i][j] = "# ";
			}
			else if (type == 3) {
				arr[i][j] = MAGENT + "# " + WHITE;
			}
			else {
				arr[i][j] = "  ";
			}
		}
	}

	//Спавн игроков 
	y1 = y;
	x1 = x;
	arr[y1][x1] = GREEN + "* " + WHITE;

	x_sec = 1;
	y_sec = 1;
	arr[y_sec][x_sec] = YELLOW + "* " + WHITE;

	while(true) {

	hidecursor();
	SetConsoleCursorPosition(hd, cd);

	// Спавн предмета для первого игрока 
	while (toch < 1) {
		y2 = Random(1, y);
		x2 = Random(1, x);
		if (arr[y2][x2] != YELLOW + "* " + WHITE and arr[y2][x2] != GREEN + "* " + WHITE and arr[y2][x2] != "# " and arr[y2][x2] != MAGENT + "# " + WHITE and arr[y2][x2] != YELLOW + "$ " + WHITE and arr[y2][x2] != CYAN + "# " + WHITE and arr[y2][x2] != CYAN + "- " + WHITE and arr[y2][x2] != CYAN + "| " + WHITE) {
			arr[y2][x2] = GREEN + "$ " + WHITE;
			toch = 1;
		}
	}

	// Спавн предмета для второго игрока 
	while (toch2 < 1) {
		y_sec_ch = Random(1, y);
		x_sec_ch = Random(1, x);
		if (arr[y_sec_ch][x_sec_ch] != YELLOW + "* " + WHITE and arr[y_sec_ch][x_sec_ch] != GREEN + "* " + WHITE and arr[y_sec_ch][x_sec_ch] != GREEN + "$ " + WHITE and arr[y_sec_ch][x_sec_ch] != "# " and arr[y_sec_ch][x_sec_ch] != MAGENT + "# " + WHITE and arr[y_sec_ch][x_sec_ch] != CYAN + "# " + WHITE and arr[y_sec_ch][x_sec_ch] != CYAN + "- " + WHITE and arr[y_sec_ch][x_sec_ch] != CYAN + "| " + WHITE) {
			arr[y_sec_ch][x_sec_ch] = YELLOW + "$ " + WHITE;
			toch2 = 1;
		}
	}

	// Вывод массива
	for (int i = 0; i < y + 2; i++) {
		for (int j = 0; j < x + 2; j++) {
			cout << arr[i][j];
		}
		cout << endl;
	}

	cout << "press wasd and <- -> to move\nfirst player score [ " << MAGENT << score << WHITE << " ]\nsecond player score [ " << MAGENT << score2 << WHITE << " ]\n\n\n\nfor exit press esc";
	char click = _getch();

	switch (click) {
		//вверх2
	case'W'://87
	case'w': {//72
		if (live2 == 0 or (arr[y_sec - 1][x_sec] == CYAN + "- " + WHITE and score2 < 10) or arr[y_sec - 1][x_sec] == CYAN + "# " + WHITE or arr[y_sec - 1][x_sec] == GREEN + "$ " + WHITE or (y_sec - 1 == 0 or arr[y_sec - 1][x_sec] == "# ") or ((arr[y_sec - 2][x_sec] == YELLOW + "$ " + WHITE or arr[y_sec - 2][x_sec] == GREEN + "$ " + WHITE or arr[y_sec - 2][x_sec] == CYAN + "- " + WHITE or arr[y_sec - 2][x_sec] == CYAN + "| " + WHITE or arr[y_sec - 2][x_sec] == CYAN + "# " + WHITE or arr[y_sec - 2][x_sec] == "# " or arr[y_sec - 2][x_sec] == "# " or arr[y_sec - 2][x_sec] == MAGENT + "# " + WHITE or arr[y_sec - 2][x_sec] == GREEN + "* " + WHITE or arr[y_sec - 2][x_sec] == GRAY + "* " + WHITE) and arr[y_sec - 1][x_sec] == MAGENT + "# " + WHITE)) {
			break;
		}
		else if (arr[y_sec - 1][x_sec] == MAGENT + "# " + WHITE and arr[y_sec - 2][x_sec] != "# " and arr[y_sec - 2][x_sec] != "# ") {
			arr[y_sec][x_sec] = "  ";
			y_sec = y_sec - 1;
			arr[y_sec][x_sec] = YELLOW + "* " + WHITE;
			arr[y_sec - 1][x_sec] = MAGENT + "# " + WHITE;
			break;
		}
		else {
			arr[y_sec][x_sec] = "  ";
			y_sec = y_sec - 1;
			arr[y_sec][x_sec] = YELLOW + "* " + WHITE;
			break;
		}
	}
		//вверх1
	case'I':
	case'i': { //119
		if (live1 == 0 or (arr[y1 - 1][x1] == CYAN + "- " + WHITE and score < 10) or arr[y1 - 1][x1] == CYAN + "# " + WHITE or arr[y1 - 1][x1] == YELLOW + "$ " + WHITE or (y1 - 1 == 0 or arr[y1 - 1][x1] == "# ") or ((arr[y1 - 2][x1] == GREEN + "$ " + WHITE or arr[y1 - 2][x1] == YELLOW + "$ " + WHITE or arr[y1 - 2][x1] == CYAN + "- " + WHITE or arr[y1 - 2][x1] == CYAN + "| " + WHITE or arr[y1 - 2][x1] == CYAN + "# " + WHITE or arr[y1 - 2][x1] == "# " or arr[y1 - 2][x1] == "# " or arr[y1 - 2][x1] == MAGENT + "# " + WHITE or arr[y1 - 2][x1] == YELLOW + "* " + WHITE or arr[y1 - 2][x1] == GRAY + "* " + WHITE) and arr[y1 - 1][x1] == MAGENT + "# " + WHITE)) {
			break;
		}
		else if (arr[y1 - 1][x1] == MAGENT + "# " + WHITE and arr[y1 - 2][x1] != "# " and arr[y1 - 2][x1] != "# ") {
			arr[y1][x1] = "  ";
			y1 = y1 - 1;
			arr[y1][x1] = GREEN + "* " + WHITE;;
			arr[y1 - 1][x1] = MAGENT + "# " + WHITE;
			break;
		}
		else {
			arr[y1][x1] = "  ";
			y1 = y1 - 1;
			arr[y1][x1] = GREEN + "* " + WHITE;;
			break;
		}
	}
		//вниз2
	case'S': //83
	case's': {//80
		if (live2 == 0 or (arr[y_sec + 1][x_sec] == CYAN + "- " + WHITE and score2 < 10) or arr[y_sec + 1][x_sec] == CYAN + "# " + WHITE or arr[y_sec + 1][x_sec] == GREEN + "$ " + WHITE or (y_sec + 1 == y + 1 or arr[y_sec + 1][x_sec] == "# ") or ((arr[y_sec + 2][x_sec] == GREEN + "$ " + WHITE or arr[y_sec + 2][x_sec] == YELLOW + "$ " + WHITE or arr[y_sec + 2][x_sec] == CYAN + "- " + WHITE or arr[y_sec + 2][x_sec] == CYAN + "| " + WHITE or arr[y_sec + 2][x_sec] == CYAN + "# " + WHITE or arr[y_sec + 2][x_sec] == "# " or arr[y_sec + 2][x_sec] == "# " or arr[y_sec + 2][x_sec] == MAGENT + "# " + WHITE or arr[y_sec + 2][x_sec] == GREEN + "* " + WHITE or arr[y_sec + 2][x_sec] == GRAY + "* " + WHITE) and arr[y_sec + 1][x_sec] == MAGENT + "# " + WHITE)) {
			break;
		}
		else if (arr[y_sec + 1][x_sec] == MAGENT + "# " + WHITE and arr[y_sec + 2][x_sec] != "# " and arr[y_sec + 2][x_sec] != "# ") {
			arr[y_sec][x_sec] = "  ";
			y_sec = y_sec + 1;
			arr[y_sec][x_sec] = YELLOW + "* " + WHITE;
			arr[y_sec + 1][x_sec] = MAGENT + "# " + WHITE;
			break;
		}
		else {
			arr[y_sec][x_sec] = "  ";
			y_sec = y_sec + 1;
			arr[y_sec][x_sec] = YELLOW + "* " + WHITE;
			break;
		}
	}
		//вниз1
	case'K':
	case'k': { //115
		if (live1 == 0 or (arr[y1 + 1][x1] == CYAN + "- " + WHITE and score < 10) or arr[y1 + 1][x1] == CYAN + "# " + WHITE or arr[y1 + 1][x1] == YELLOW + "$ " + WHITE or (y1 + 1 == y + 1 or arr[y1 + 1][x1] == "# ") or ((arr[y1 + 2][x1] == GREEN + "$ " + WHITE or arr[y1 + 2][x1] == YELLOW + "$ " + WHITE or arr[y1 + 2][x1] == CYAN + "- " + WHITE or arr[y1 + 2][x1] == CYAN + "| " + WHITE or arr[y1 + 2][x1] == CYAN + "# " + WHITE or arr[y1 + 2][x1] == "# " or arr[y1 + 2][x1] == "# " or arr[y1 + 2][x1] == MAGENT + "# " + WHITE or arr[y1 + 2][x1] == YELLOW + "* " + WHITE or arr[y1 + 2][x1] == GRAY + "* " + WHITE) and arr[y1 + 1][x1] == MAGENT + "# " + WHITE)) {
			break;
		}
		else if (arr[y1 + 1][x1] == MAGENT + "# " + WHITE and arr[y1 + 2][x1] != "# " and arr[y1 + 2][x1] != "# ") {
			arr[y1][x1] = "  ";
			y1 = y1 + 1;
			arr[y1][x1] = GREEN + "* " + WHITE;;
			arr[y1 + 1][x1] = MAGENT + "# " + WHITE;
			break;
		}
		else {
			arr[y1][x1] = "  ";
			y1 = y1 + 1;
			arr[y1][x1] = GREEN + "* " + WHITE;;
			break;
		}
	}
		//вправо2
	case'L':
	case'l': {//77
		if (live1 == 0 or (arr[y1][x1 + 1] == CYAN + "| " + WHITE and score < 10) or arr[y1][x1 + 1] == CYAN + "# " + WHITE or arr[y1][x1 + 1] == YELLOW + "$ " + WHITE or (x1 + 1 == x + 1 or arr[y1][x1 + 1] == "# ") or ((arr[y1][x1 + 2] == YELLOW + "$ " + WHITE or arr[y1][x1 + 2] == GREEN + "$ " + WHITE or arr[y1][x1 + 2] == CYAN + "- " + WHITE or arr[y1][x1 + 2] == CYAN + "| " + WHITE or arr[y1][x1 + 2] == CYAN + "# " + WHITE or arr[y1][x1 + 2] == "# " or arr[y1][x1 + 2] == "# " or arr[y1][x1 + 2] == MAGENT + "# " + WHITE or arr[y1][x1 + 2] == YELLOW + "* " + WHITE or arr[y1][x1 + 2] == GRAY + "* " + WHITE) and arr[y1][x1 + 1] == MAGENT + "# " + WHITE)) {
			break;
		}
		else if (arr[y1][x1 + 1] == MAGENT + "# " + WHITE and arr[y1][x1 + 2] != "# " and arr[y1][x1 + 2] != "# ") {
			arr[y1][x1] = "  ";
			x1 = x1 + 1;
			arr[y1][x1] = GREEN + "* " + WHITE;
			arr[y1][x1 + 1] = MAGENT + "# " + WHITE;
			break;
		}
		else {
			arr[y1][x1] = "  ";
			x1 = x1 + 1;
			arr[y1][x1] = GREEN + "* " + WHITE;;
			break;
		}
	}
		//вправо1
	case'D': //68
	case'd': { //100
		if (live2 == 0 or (arr[y_sec][x_sec + 1] == CYAN + "| " + WHITE and score2 < 10) or arr[y_sec][x_sec + 1] == CYAN + "# " + WHITE or arr[y_sec][x_sec + 1] == GREEN + "$ " + WHITE or (x_sec + 1 == x + 1 or arr[y_sec][x_sec + 1] == "# ") or ((arr[y_sec][x_sec + 2] == GREEN + "$ " + WHITE or arr[y_sec][x_sec + 2] == YELLOW + "$ " + WHITE or arr[y_sec][x_sec + 2] == CYAN + "- " + WHITE or arr[y_sec][x_sec + 2] == CYAN + "| " + WHITE or arr[y_sec][x_sec + 2] == CYAN + "# " + WHITE or arr[y_sec][x_sec + 2] == "# " or arr[y_sec][x_sec + 2] == "# " or arr[y_sec][x_sec + 2] == MAGENT + "# " + WHITE or arr[y_sec][x_sec + 2] == GREEN + "* " + WHITE or arr[y_sec][x_sec + 2] == GRAY + "* " + WHITE) and arr[y_sec][x_sec + 1] == MAGENT + "# " + WHITE)) {
			break;
		}
		else if (arr[y_sec][x_sec + 1] == MAGENT + "# " + WHITE and arr[y_sec][x_sec + 2] != "# " and arr[y_sec][x_sec + 2] != "# ") {
			arr[y_sec][x_sec] = "  ";
			x_sec = x_sec + 1;
			arr[y_sec][x_sec] = YELLOW + "* " + WHITE;
			arr[y_sec][x_sec + 1] = MAGENT + "# " + WHITE;
			break;
		}
		else {
			arr[y_sec][x_sec] = "  ";
			x_sec = x_sec + 1;
			arr[y_sec][x_sec] = YELLOW + "* " + WHITE;
			break;
		}
	}
		//влево2
	case'A': //65
	case'a': {//75
		if (live2 == 0 or (arr[y_sec][x_sec - 1] == CYAN + "| " + WHITE and score2 < 10) or arr[y_sec][x_sec - 1] == CYAN + "# " + WHITE or arr[y_sec][x_sec - 1] == GREEN + "$ " + WHITE or (x_sec - 1 == 0 or arr[y_sec][x_sec - 1] == "# ") or ((arr[y_sec][x_sec - 2] == GREEN + "$ " + WHITE or arr[y_sec][x_sec - 2] == YELLOW + "$ " + WHITE or arr[y_sec][x_sec - 2] == CYAN + "- " + WHITE or arr[y_sec][x_sec - 2] == CYAN + "| " + WHITE or arr[y_sec][x_sec - 2] == CYAN + "# " + WHITE or arr[y_sec][x_sec - 2] == "# " or arr[y_sec][x_sec - 2] == "# " or arr[y_sec][x_sec - 2] == MAGENT + "# " + WHITE or arr[y_sec][x_sec - 2] == GREEN + "* " + WHITE or arr[y_sec][x_sec - 2] == GRAY + "* " + WHITE) and arr[y_sec][x_sec - 1] == MAGENT + "# " + WHITE)) {
			break;
		}
		else if (arr[y_sec][x_sec - 1] == MAGENT + "# " + WHITE and arr[y_sec][x_sec - 2] != "# " and arr[y_sec][x_sec - 2] != "# ") {
			arr[y_sec][x_sec] = "  ";
			x_sec = x_sec - 1;
			arr[y_sec][x_sec] = YELLOW + "* " + WHITE;
			arr[y_sec][x_sec - 1] = MAGENT + "# " + WHITE;
			break;
		}
		else {
			arr[y_sec][x_sec] = "  ";
			x_sec = x_sec - 1;
			arr[y_sec][x_sec] = YELLOW + "* " + WHITE;
			break;
		}
	}
		//влево1
	case'J':
	case'j': { //97
		if (live1 == 0 or (arr[y1][x1 - 1] == CYAN + "| " + WHITE and score < 10) or arr[y1][x1 - 1] == CYAN + "# " + WHITE or arr[y1][x1 - 1] == YELLOW + "$ " + WHITE or (x1 - 1 == 0 or arr[y1][x1 - 1] == "# ") or ((arr[y1][x1 - 2] == GREEN + "$ " + WHITE or arr[y1][x1 - 2] == YELLOW + "$ " + WHITE or arr[y1][x1 - 2] == CYAN + "- " + WHITE or arr[y1][x1 - 2] == CYAN + "| " + WHITE or arr[y1][x1 - 2] == CYAN + "# " + WHITE or arr[y1][x1 - 2] == "# " or arr[y1][x1 - 2] == "# " or arr[y1][x1 - 2] == MAGENT + "# " + WHITE or arr[y1][x1 - 2] == YELLOW + "* " + WHITE or arr[y1][x1 - 2] == GRAY + "* " + WHITE) and arr[y1][x1 - 1] == MAGENT + "# " + WHITE)) {
			break;
		}
		else if (arr[y1][x1 - 1] == MAGENT + "# " + WHITE and arr[y1][x1 - 2] != "# " and arr[y1][x1 - 2] != "# ") {
			arr[y1][x1] = "  ";
			x1 = x1 - 1;
			arr[y1][x1] = GREEN + "* " + WHITE;
			arr[y1][x1 - 1] = MAGENT + "# " + WHITE;
			break;
		}
		else {
			arr[y1][x1] = "  ";
			x1 = x1 - 1;
			arr[y1][x1] = GREEN + "* " + WHITE;
			break;
		}
	}
		default:
			break;
	}

	if (x1 == x2 and y1 == y2) {
		toch = 0;
		score += 1;
	}

	//проверка для второго игрока  
	if (x_sec == x_sec_ch and y_sec == y_sec_ch) {
		toch2 = 0;
		score2 += 1;
	}
	// Если оба стоят на одной клетке 
	if (x1 == x_sec and y1 == y_sec and live1 == 1 and live2 == 1) {
		arr[y1][x1] = CYAN + "& " + WHITE;
	}

	if (exit == 0) {
		if (score == 1 or score2 == 1) {
			//Ворота сверху
			arr[0][(x - 1) / 2 + 1] = CYAN + "  " + WHITE;
			arr[0][(x - 1) / 2 + 2] = CYAN + "| " + WHITE;
			arr[0][(x - 1) / 2] = CYAN + "| " + WHITE;
			//Ворота внизу
			arr[y + 1][(x - 1) / 2 + 1] = "  ";
			arr[y + 1][(x - 1) / 2 + 2] = CYAN + "| " + WHITE;
			arr[y + 1][(x - 1) / 2] = CYAN + "| " + WHITE;
			//Ворота справа
			arr[(y - 1) / 2 + 1][x + 1] = "  ";
			arr[(y - 1) / 2 + 2][x + 1] = CYAN + "- " + WHITE;
			arr[(y - 1) / 2][x + 1] = CYAN + "- " + WHITE;
			//Ворота слева
			arr[(y - 1) / 2 + 1][0] = "  ";
			arr[(y - 1) / 2 + 2][0] = CYAN + "- " + WHITE;
			arr[(y - 1) / 2][0] = CYAN + "- " + WHITE;
			exit = 1;
		}
	}
	// Проверка побега игрока 
	if (exit == 1 and ((x1 == 1 and y1 == (y - 1) / 2 + 1) or (x1 == x and y1 == (y - 1) / 2 + 1) or (x1 == (x - 1) / 2 + 1 and y1 == y) or (x1 == (x - 1) / 2 + 1 and y1 == 1))) {
		system("cls");
		cout << GREEN << "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tИгрок 1 победил в этом испытании!\n\n\n\n\n\n\n" << WHITE;
		system("pause");
		break;
	}
	else if (exit == 1 and ((x_sec == 1 and y_sec == (y - 1) / 2 + 1) or (x_sec == x and y_sec == (y - 1) / 2 + 1) or (x_sec == (x - 1) / 2 + 1 and y_sec == y) or (x_sec == (x - 1) / 2 + 1 and y_sec == 1))) {
		system("cls");
		cout << YELLOW << "\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tИгрок 2 победил в этом испытании!\n\n\n\n\n\n\n" << WHITE;
		system("pause");
		break;
	}

	}
	for (int i = 0; i < x; i++) {
		delete[] arr[i];
	}
	delete[] arr;
}
